import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function testUpdate() {
  try {
    console.log('üîç Buscando primeiro im√≥vel...\n');
    
    const property = await prisma.property.findFirst();
    
    if (!property) {
      console.log('‚ùå Nenhum im√≥vel encontrado');
      return;
    }
    
    console.log('‚úÖ Im√≥vel encontrado:');
    console.log(`   ID: ${property.id}`);
    console.log(`   T√≠tulo: ${property.title}`);
    console.log(`   Tipo: ${property.type}`);
    console.log(`   Pre√ßo: R$ ${property.price?.toLocaleString('pt-BR')}`);
    console.log(`   MainImage: ${property.mainImage || 'N√£o definida'}`);
    
    // Testar atualiza√ß√£o simples
    console.log('\nüìù Testando atualiza√ß√£o...');
    
    const updated = await prisma.property.update({
      where: { id: property.id },
      data: {
        mainImage: 'https://images.unsplash.com/photo-1600585154340-be6161a56a0c?w=1200&q=80',
        rating: 4.8
      }
    });
    
    console.log('‚úÖ Atualiza√ß√£o bem-sucedida!');
    console.log(`   Nova MainImage: ${updated.mainImage}`);
    console.log(`   Nova Rating: ${updated.rating}`);
    
    // Reverter
    console.log('\nüîÑ Revertendo altera√ß√µes...');
    await prisma.property.update({
      where: { id: property.id },
      data: {
        mainImage: property.mainImage,
        rating: property.rating
      }
    });
    
    console.log('‚úÖ Revertido com sucesso!');
    
  } catch (error) {
    console.error('‚ùå Erro:', error.message);
    console.error('Stack:', error.stack);
  } finally {
    await prisma.$disconnect();
  }
}

testUpdate();
