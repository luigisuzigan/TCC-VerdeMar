import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function verifyPersistence() {
  try {
    console.log('üîç Verificando persist√™ncia de dados...\n');
    
    // Buscar um im√≥vel
    const property = await prisma.property.findFirst();
    
    if (!property) {
      console.log('‚ùå Nenhum im√≥vel encontrado');
      return;
    }
    
    console.log('üìã ANTES DA ATUALIZA√á√ÉO:');
    console.log(`   ID: ${property.id}`);
    console.log(`   T√≠tulo: ${property.title}`);
    console.log(`   Descri√ß√£o: ${property.description?.substring(0, 50)}...`);
    console.log(`   Pre√ßo: R$ ${property.price?.toLocaleString('pt-BR')}`);
    
    // Fazer uma atualiza√ß√£o
    const novoTitulo = `[TESTE ${Date.now()}] ${property.title}`;
    const novoPreco = property.price + 1000;
    
    console.log('\nüîÑ Atualizando...');
    await prisma.property.update({
      where: { id: property.id },
      data: {
        title: novoTitulo,
        price: novoPreco
      }
    });
    
    console.log('‚úÖ Atualiza√ß√£o enviada ao banco\n');
    
    // Buscar novamente para confirmar
    const propertyUpdated = await prisma.property.findUnique({
      where: { id: property.id }
    });
    
    console.log('üìã DEPOIS DA ATUALIZA√á√ÉO (relendo do banco):');
    console.log(`   T√≠tulo: ${propertyUpdated.title}`);
    console.log(`   Pre√ßo: R$ ${propertyUpdated.price?.toLocaleString('pt-BR')}`);
    
    if (propertyUpdated.title === novoTitulo && propertyUpdated.price === novoPreco) {
      console.log('\n‚úÖ DADOS PERSISTIDOS COM SUCESSO!');
      console.log('   As altera√ß√µes est√£o sendo salvas no banco de dados.');
    } else {
      console.log('\n‚ùå FALHA NA PERSIST√äNCIA!');
      console.log('   As altera√ß√µes N√ÉO foram salvas no banco.');
    }
    
    // Reverter para n√£o bagun√ßar
    console.log('\nüîÑ Revertendo teste...');
    await prisma.property.update({
      where: { id: property.id },
      data: {
        title: property.title,
        price: property.price
      }
    });
    console.log('‚úÖ Revertido!');
    
  } catch (error) {
    console.error('‚ùå Erro:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

verifyPersistence();
